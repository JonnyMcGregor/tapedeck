#pragma once
#include "KeyPress.hpp"
#include <map>
#include <vector>

std::map<KeyPress, std::string> keypressToString{
    {KeyPress(Key::K_A, ModifierKey::Control), "^A"},
    {KeyPress(Key::K_B, ModifierKey::Control), "^B"},
    {KeyPress(Key::K_C, ModifierKey::Control), "^C"},
    {KeyPress(Key::K_D, ModifierKey::Control), "^D"},
    {KeyPress(Key::K_E, ModifierKey::Control), "^E"},
    {KeyPress(Key::K_F, ModifierKey::Control), "^F"},
    {KeyPress(Key::K_G, ModifierKey::Control), "^G"},
    {KeyPress(Key::K_H, ModifierKey::Control), "^H"},
    {KeyPress(Key::K_I, ModifierKey::Control), "^I"},
    {KeyPress(Key::K_J, ModifierKey::Control), "^J"},
    {KeyPress(Key::K_K, ModifierKey::Control), "^K"},
    {KeyPress(Key::K_L, ModifierKey::Control), "^L"},
    {KeyPress(Key::K_M, ModifierKey::Control), "^M"},
    {KeyPress(Key::K_N, ModifierKey::Control), "^N"},
    {KeyPress(Key::K_O, ModifierKey::Control), "^O"},
    {KeyPress(Key::K_P, ModifierKey::Control), "^P"},
    {KeyPress(Key::K_Q, ModifierKey::Control), "^Q"},
    {KeyPress(Key::K_R, ModifierKey::Control), "^R"},
    {KeyPress(Key::K_S, ModifierKey::Control), "^S"},
    {KeyPress(Key::K_T, ModifierKey::Control), "^T"},
    {KeyPress(Key::K_U, ModifierKey::Control), "^U"},
    {KeyPress(Key::K_V, ModifierKey::Control), "^V"},
    {KeyPress(Key::K_W, ModifierKey::Control), "^W"},
    {KeyPress(Key::K_X, ModifierKey::Control), "^X"},
    {KeyPress(Key::K_Y, ModifierKey::Control), "^Y"},
    {KeyPress(Key::K_Z, ModifierKey::Control), "^Z"},

    {KeyPress(Key::K_A, ModifierKey::Shift), "A"},
    {KeyPress(Key::K_B, ModifierKey::Shift), "B"},
    {KeyPress(Key::K_C, ModifierKey::Shift), "C"},
    {KeyPress(Key::K_D, ModifierKey::Shift), "D"},
    {KeyPress(Key::K_E, ModifierKey::Shift), "E"},
    {KeyPress(Key::K_F, ModifierKey::Shift), "F"},
    {KeyPress(Key::K_G, ModifierKey::Shift), "G"},
    {KeyPress(Key::K_H, ModifierKey::Shift), "H"},
    {KeyPress(Key::K_I, ModifierKey::Shift), "I"},
    {KeyPress(Key::K_J, ModifierKey::Shift), "J"},
    {KeyPress(Key::K_K, ModifierKey::Shift), "K"},
    {KeyPress(Key::K_L, ModifierKey::Shift), "L"},
    {KeyPress(Key::K_M, ModifierKey::Shift), "M"},
    {KeyPress(Key::K_N, ModifierKey::Shift), "N"},
    {KeyPress(Key::K_O, ModifierKey::Shift), "O"},
    {KeyPress(Key::K_P, ModifierKey::Shift), "P"},
    {KeyPress(Key::K_Q, ModifierKey::Shift), "Q"},
    {KeyPress(Key::K_R, ModifierKey::Shift), "R"},
    {KeyPress(Key::K_S, ModifierKey::Shift), "S"},
    {KeyPress(Key::K_T, ModifierKey::Shift), "T"},
    {KeyPress(Key::K_U, ModifierKey::Shift), "U"},
    {KeyPress(Key::K_V, ModifierKey::Shift), "V"},
    {KeyPress(Key::K_W, ModifierKey::Shift), "W"},
    {KeyPress(Key::K_X, ModifierKey::Shift), "X"},
    {KeyPress(Key::K_Y, ModifierKey::Shift), "Y"},
    {KeyPress(Key::K_Z, ModifierKey::Shift), "Z"},

    {KeyPress(Key::K_A), "a"},
    {KeyPress(Key::K_B), "b"},
    {KeyPress(Key::K_C), "c"},
    {KeyPress(Key::K_D), "d"},
    {KeyPress(Key::K_E), "e"},
    {KeyPress(Key::K_F), "f"},
    {KeyPress(Key::K_G), "g"},
    {KeyPress(Key::K_H), "h"},
    {KeyPress(Key::K_I), "i"},
    {KeyPress(Key::K_J), "j"},
    {KeyPress(Key::K_K), "k"},
    {KeyPress(Key::K_L), "l"},
    {KeyPress(Key::K_M), "m"},
    {KeyPress(Key::K_N), "n"},
    {KeyPress(Key::K_O), "o"},
    {KeyPress(Key::K_P), "p"},
    {KeyPress(Key::K_Q), "q"},
    {KeyPress(Key::K_R), "r"},
    {KeyPress(Key::K_S), "s"},
    {KeyPress(Key::K_T), "t"},
    {KeyPress(Key::K_U), "u"},
    {KeyPress(Key::K_V), "v"},
    {KeyPress(Key::K_W), "w"},
    {KeyPress(Key::K_X), "x"},
    {KeyPress(Key::K_Y), "y"},
    {KeyPress(Key::K_Z), "z"},
};

#define keycodeVec std::vector<int>

std::map<keycodeVec, KeyPress> keycodesToKeypress{
    {keycodeVec{1}, KeyPress(Key::K_A, ModifierKey::Control)},
    {keycodeVec{2}, KeyPress(Key::K_B, ModifierKey::Control)},
    {keycodeVec{3}, KeyPress(Key::K_C, ModifierKey::Control)},
    {keycodeVec{4}, KeyPress(Key::K_D, ModifierKey::Control)},
    {keycodeVec{5}, KeyPress(Key::K_E, ModifierKey::Control)},
    {keycodeVec{6}, KeyPress(Key::K_F, ModifierKey::Control)},
    {keycodeVec{7}, KeyPress(Key::K_G, ModifierKey::Control)},
    {keycodeVec{8}, KeyPress(Key::K_H, ModifierKey::Control)},
    {keycodeVec{9}, KeyPress(Key::K_I, ModifierKey::Control)},
    {keycodeVec{10}, KeyPress(Key::K_J, ModifierKey::Control)},
    {keycodeVec{11}, KeyPress(Key::K_K, ModifierKey::Control)},
    {keycodeVec{12}, KeyPress(Key::K_L, ModifierKey::Control)},
    {keycodeVec{13}, KeyPress(Key::K_M, ModifierKey::Control)},
    {keycodeVec{14}, KeyPress(Key::K_N, ModifierKey::Control)},
    {keycodeVec{15}, KeyPress(Key::K_O, ModifierKey::Control)},
    {keycodeVec{16}, KeyPress(Key::K_P, ModifierKey::Control)},
    {keycodeVec{17}, KeyPress(Key::K_Q, ModifierKey::Control)},
    {keycodeVec{18}, KeyPress(Key::K_R, ModifierKey::Control)},
    {keycodeVec{19}, KeyPress(Key::K_S, ModifierKey::Control)},
    {keycodeVec{20}, KeyPress(Key::K_T, ModifierKey::Control)},
    {keycodeVec{21}, KeyPress(Key::K_U, ModifierKey::Control)},
    {keycodeVec{22}, KeyPress(Key::K_V, ModifierKey::Control)},
    {keycodeVec{23}, KeyPress(Key::K_W, ModifierKey::Control)},
    {keycodeVec{24}, KeyPress(Key::K_X, ModifierKey::Control)},
    {keycodeVec{25}, KeyPress(Key::K_Y, ModifierKey::Control)},
    {keycodeVec{26}, KeyPress(Key::K_Z, ModifierKey::Control)},

    {keycodeVec{27}, KeyPress(Key::K_Escape)},

    {keycodeVec{27, 91, 53, 126}, KeyPress(Key::K_PageUp)},
    {keycodeVec{27, 91, 54, 126}, KeyPress(Key::K_PageDown)},

    {keycodeVec{27, 91, 65}, KeyPress(Key::K_UpArrow)},
    {keycodeVec{27, 91, 66}, KeyPress(Key::K_DownArrow)},
    {keycodeVec{27, 91, 67}, KeyPress(Key::K_RightArrow)},
    {keycodeVec{27, 91, 68}, KeyPress(Key::K_LeftArrow)},

    {keycodeVec{27, 91, 72}, KeyPress(Key::K_Home)},
    {keycodeVec{27, 91, 52, 126}, KeyPress(Key::K_End)},
    {keycodeVec{27, 91, 52, 104}, KeyPress(Key::K_Insert)},
    {keycodeVec{27, 91, 80}, KeyPress(Key::K_Delete)},

    {keycodeVec{27, 91, 49, 59, 50, 65}, KeyPress(Key::K_UpArrow, ModifierKey::Shift)},
    {keycodeVec{27, 91, 49, 59, 50, 66}, KeyPress(Key::K_DownArrow, ModifierKey::Shift)},
    {keycodeVec{27, 91, 49, 59, 50, 67}, KeyPress(Key::K_RightArrow, ModifierKey::Shift)},
    {keycodeVec{27, 91, 49, 59, 50, 68}, KeyPress(Key::K_LeftArrow, ModifierKey::Shift)},

    {keycodeVec{27, 91, 49, 59, 53, 65}, KeyPress(Key::K_UpArrow, ModifierKey::Control)},
    {keycodeVec{27, 91, 49, 59, 53, 66}, KeyPress(Key::K_DownArrow, ModifierKey::Control)},
    {keycodeVec{27, 91, 49, 59, 53, 67}, KeyPress(Key::K_RightArrow, ModifierKey::Control)},
    {keycodeVec{27, 91, 49, 59, 53, 68}, KeyPress(Key::K_LeftArrow, ModifierKey::Control)},

    {keycodeVec{27, 91, 49, 59, 54, 65}, KeyPress(Key::K_UpArrow, ModifierKey::Control | ModifierKey::Shift)},
    {keycodeVec{27, 91, 49, 59, 54, 66}, KeyPress(Key::K_DownArrow, ModifierKey::Control | ModifierKey::Shift)},
    {keycodeVec{27, 91, 49, 59, 54, 67}, KeyPress(Key::K_RightArrow, ModifierKey::Control | ModifierKey::Shift)},
    {keycodeVec{27, 91, 49, 59, 54, 68}, KeyPress(Key::K_LeftArrow, ModifierKey::Control | ModifierKey::Shift)},

    {keycodeVec{27, 79, 80}, KeyPress(Key::K_F1)},
    {keycodeVec{27, 79, 81}, KeyPress(Key::K_F2)},
    {keycodeVec{27, 79, 82}, KeyPress(Key::K_F3)},
    {keycodeVec{27, 79, 83}, KeyPress(Key::K_F4)},

    {keycodeVec{27, 91, 49, 53, 126}, KeyPress(Key::K_F5)},
    {keycodeVec{27, 91, 49, 55, 126}, KeyPress(Key::K_F6)},
    {keycodeVec{27, 91, 49, 56, 126}, KeyPress(Key::K_F7)},
    {keycodeVec{27, 91, 49, 57, 126}, KeyPress(Key::K_F8)},

    {keycodeVec{27, 91, 50, 48, 126}, KeyPress(Key::K_F9)},
    {keycodeVec{27, 91, 50, 49, 126}, KeyPress(Key::K_F10)},
    {keycodeVec{27, 91, 50, 51, 126}, KeyPress(Key::K_F11)},
    {keycodeVec{27, 91, 50, 52, 126}, KeyPress(Key::K_F12)},
    
    {keycodeVec{32}, KeyPress(Key::K_Space)},
    {keycodeVec{34}, KeyPress(Key::K_Quote, ModifierKey::Shift)},

    {keycodeVec{39}, KeyPress(Key::K_Quote)},

    {keycodeVec{44}, KeyPress(Key::K_Comma)},
    {keycodeVec{45}, KeyPress(Key::K_Minus)},
    {keycodeVec{46}, KeyPress(Key::K_Period)},
    {keycodeVec{47}, KeyPress(Key::K_ForwardSlash)},

    {keycodeVec{48}, KeyPress(Key::K_0)},
    {keycodeVec{49}, KeyPress(Key::K_1)},
    {keycodeVec{50}, KeyPress(Key::K_2)},
    {keycodeVec{51}, KeyPress(Key::K_3)},
    {keycodeVec{52}, KeyPress(Key::K_4)},
    {keycodeVec{53}, KeyPress(Key::K_5)},
    {keycodeVec{54}, KeyPress(Key::K_6)},
    {keycodeVec{55}, KeyPress(Key::K_7)},
    {keycodeVec{56}, KeyPress(Key::K_8)},
    {keycodeVec{57}, KeyPress(Key::K_9)},
    {keycodeVec{58}, KeyPress(Key::K_Semicolon, ModifierKey::Shift)},
    {keycodeVec{59}, KeyPress(Key::K_Semicolon)},

    {keycodeVec{60}, KeyPress(Key::K_Comma, ModifierKey::Shift)},
    {keycodeVec{61}, KeyPress(Key::K_Equal)},
    {keycodeVec{62}, KeyPress(Key::K_Period, ModifierKey::Shift)},
    {keycodeVec{63}, KeyPress(Key::K_ForwardSlash, ModifierKey::Shift)},

    {keycodeVec{65}, KeyPress(Key::K_A, ModifierKey::Shift)},
    {keycodeVec{66}, KeyPress(Key::K_B, ModifierKey::Shift)},
    {keycodeVec{67}, KeyPress(Key::K_C, ModifierKey::Shift)},
    {keycodeVec{68}, KeyPress(Key::K_D, ModifierKey::Shift)},
    {keycodeVec{69}, KeyPress(Key::K_E, ModifierKey::Shift)},
    {keycodeVec{70}, KeyPress(Key::K_F, ModifierKey::Shift)},
    {keycodeVec{71}, KeyPress(Key::K_G, ModifierKey::Shift)},
    {keycodeVec{72}, KeyPress(Key::K_H, ModifierKey::Shift)},
    {keycodeVec{73}, KeyPress(Key::K_I, ModifierKey::Shift)},
    {keycodeVec{74}, KeyPress(Key::K_J, ModifierKey::Shift)},
    {keycodeVec{75}, KeyPress(Key::K_K, ModifierKey::Shift)},
    {keycodeVec{76}, KeyPress(Key::K_L, ModifierKey::Shift)},
    {keycodeVec{77}, KeyPress(Key::K_M, ModifierKey::Shift)},
    {keycodeVec{78}, KeyPress(Key::K_N, ModifierKey::Shift)},
    {keycodeVec{79}, KeyPress(Key::K_O, ModifierKey::Shift)},
    {keycodeVec{80}, KeyPress(Key::K_P, ModifierKey::Shift)},
    {keycodeVec{81}, KeyPress(Key::K_Q, ModifierKey::Shift)},
    {keycodeVec{82}, KeyPress(Key::K_R, ModifierKey::Shift)},
    {keycodeVec{83}, KeyPress(Key::K_S, ModifierKey::Shift)},
    {keycodeVec{84}, KeyPress(Key::K_T, ModifierKey::Shift)},
    {keycodeVec{85}, KeyPress(Key::K_U, ModifierKey::Shift)},
    {keycodeVec{86}, KeyPress(Key::K_V, ModifierKey::Shift)},
    {keycodeVec{87}, KeyPress(Key::K_W, ModifierKey::Shift)},
    {keycodeVec{88}, KeyPress(Key::K_X, ModifierKey::Shift)},
    {keycodeVec{89}, KeyPress(Key::K_Y, ModifierKey::Shift)},
    {keycodeVec{90}, KeyPress(Key::K_Z, ModifierKey::Shift)},
    {keycodeVec{91}, KeyPress(Key::K_BracketOpen)},
    {keycodeVec{93}, KeyPress(Key::K_BracketClose)},

    {keycodeVec{96}, KeyPress(Key::K_Grave)},

    {keycodeVec{97}, KeyPress(Key::K_A)},
    {keycodeVec{98}, KeyPress(Key::K_B)},
    {keycodeVec{99}, KeyPress(Key::K_C)},
    {keycodeVec{100}, KeyPress(Key::K_D)},
    {keycodeVec{101}, KeyPress(Key::K_E)},
    {keycodeVec{102}, KeyPress(Key::K_F)},
    {keycodeVec{103}, KeyPress(Key::K_G)},
    {keycodeVec{104}, KeyPress(Key::K_H)},
    {keycodeVec{105}, KeyPress(Key::K_I)},
    {keycodeVec{106}, KeyPress(Key::K_J)},
    {keycodeVec{107}, KeyPress(Key::K_K)},
    {keycodeVec{108}, KeyPress(Key::K_L)},
    {keycodeVec{109}, KeyPress(Key::K_M)},
    {keycodeVec{110}, KeyPress(Key::K_N)},
    {keycodeVec{111}, KeyPress(Key::K_O)},
    {keycodeVec{112}, KeyPress(Key::K_P)},
    {keycodeVec{113}, KeyPress(Key::K_Q)},
    {keycodeVec{114}, KeyPress(Key::K_R)},
    {keycodeVec{115}, KeyPress(Key::K_S)},
    {keycodeVec{116}, KeyPress(Key::K_T)},
    {keycodeVec{117}, KeyPress(Key::K_U)},
    {keycodeVec{118}, KeyPress(Key::K_V)},
    {keycodeVec{119}, KeyPress(Key::K_W)},
    {keycodeVec{120}, KeyPress(Key::K_X)},
    {keycodeVec{121}, KeyPress(Key::K_Y)},
    {keycodeVec{122}, KeyPress(Key::K_Z)},
};

std::map<Key, std::string> keyToKeyname{
    {Key::K_Escape, "Escape"},
    {Key::K_F1, "F1"},
    {Key::K_F2, "F2"},
    {Key::K_F3, "F3"},
    {Key::K_F4, "F4"},
    {Key::K_F5, "F5"},
    {Key::K_F6, "F6"},
    {Key::K_F7, "F7"},
    {Key::K_F8, "F8"},
    {Key::K_F9, "F9"},
    {Key::K_F10, "F10"},
    {Key::K_F11, "F11"},
    {Key::K_F12, "F12"},
    {Key::K_PauseBreak, "PauseBreak"},
    {Key::K_Insert, "Insert"},
    {Key::K_Delete, "Delete"},

    {Key::K_A, "A"},
    {Key::K_B, "B"},
    {Key::K_C, "C"},
    {Key::K_D, "D"},
    {Key::K_E, "E"},
    {Key::K_F, "F"},
    {Key::K_G, "G"},
    {Key::K_H, "H"},
    {Key::K_I, "I"},
    {Key::K_J, "J"},
    {Key::K_K, "K"},
    {Key::K_L, "L"},
    {Key::K_M, "M"},
    {Key::K_N, "N"},
    {Key::K_O, "O"},
    {Key::K_P, "P"},
    {Key::K_Q, "Q"},
    {Key::K_R, "R"},
    {Key::K_S, "S"},
    {Key::K_T, "T"},
    {Key::K_U, "U"},
    {Key::K_V, "V"},
    {Key::K_W, "W"},
    {Key::K_X, "X"},
    {Key::K_Y, "Y"},
    {Key::K_Z, "Z"},

    {Key::K_Tab, "Tab"},
    {Key::K_Grave, "Grave"},
    {Key::K_0, "0"},
    {Key::K_1, "1"},
    {Key::K_2, "2"},
    {Key::K_3, "3"},
    {Key::K_4, "4"},
    {Key::K_5, "5"},
    {Key::K_6, "6"},
    {Key::K_7, "7"},
    {Key::K_8, "8"},
    {Key::K_9, "9"},
    {Key::K_Minus, "Minus"},
    {Key::K_Equal, "Equals"},
    {Key::K_Backspace, "Backspace"},

    {Key::K_Home, "Home"},
    {Key::K_PageUp, "PageUp"},
    {Key::K_PageDown, "PageDown"},
    {Key::K_End, "End"},

    {Key::K_UpArrow, "UpArrow"},
    {Key::K_DownArrow, "DownArrow"},
    {Key::K_LeftArrow, "LeftArrow"},
    {Key::K_RightArrow, "RightArrow"},

    {Key::K_BracketOpen, "["},
    {Key::K_BracketClose, "]"},
    {Key::K_BackSlash, "BackSlash"},
    {Key::K_Semicolon, "Semicolon"},
    {Key::K_Quote, "Quote"},
    {Key::K_Comma, "Comma"},
    {Key::K_Period, "Period"},
    {Key::K_ForwardSlash, "ForwardSlash"},

    {Key::K_Enter, "Enter"},
    {Key::K_Space, "Space"},
};

std::string to_string(KeyPress kp) {
    if (keypressToString.count(kp) > 0) {
        return keypressToString.at(kp);
    } else {
        return "";
    }
}

std::string to_debug_string(KeyPress kp) {
    std::string output = "";
    if (kp.modifierKeys & ModifierKey::Control) output += "Control+";
    if (kp.modifierKeys & ModifierKey::Shift) output += "Shift+";
    if (kp.modifierKeys & ModifierKey::Alt) output += "Alt+";
    if (keyToKeyname.count(kp.key) > 0) {
        output += keyToKeyname.at(kp.key);
    } else {
        output += "<unknown>";
    }
    return output;
}
